[include SETTLE_BELT_TENSION.cfg]

#####################################################################
#   PRINT START
#####################################################################

[gcode_macro PRINT_START]
gcode:
  # Fetch parameters from slicer
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  {% set px = printer["gcode_macro _POOP_POS"].x|float %}
  {% set py = printer["gcode_macro _POOP_POS"].y|float %}
  {% set pz = printer["gcode_macro _POOP_POS"].z|float %}

  
  FILTER_ON
  
  M140 S{target_bed}                                  # Start bed heating
  M104 S150                                           # Initial Nozzle Warmup
  
  STATUS_HOMING
  
  G28                                                 # Home all axes
  G90                                                 # Set absolute positioning
  M107                                                # Part cooling fan off
  
  STATUS_HEATING
  
  WIPE_NOZZLE                                         # Run wiper macro
  
  G1 X{printer["gcode_macro _POOP_POS"].x} Y{printer["gcode_macro _POOP_POS"].y} Z20 F6000
  
  
  M190 S{target_bed}                                  # Wait for bed to reach temp
  M109 S{target_extruder}                             # Wait for nozzle to reach temp

  POOP                                                # Purge bucket
  
  WIPE_NOZZLE                                         # Run wiper macro
  
  STATUS_PRINTING
  LINE_PURGE                                          # Prime nozzle


#####################################################################
#   PRINT END MACRO
#####################################################################

[gcode_macro PRINT_END]
gcode:
    STATUS_COOLING
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move (XY only)
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    #   Lower bed to Z=max_z - 10 (usually Z=110) if current Z is above that
    {% set target_z = max_z - 10 %}
    {% if printer.toolhead.position.z < target_z %}
        G90
        G0 Z{target_z} F3600       ; lower bed to safe parking height
        G91
    {% endif %}

    G0 X{x_safe} Y{y_safe} F20000  ; move toolhead to reduce stringing
    TURN_OFF_HEATERS
    M107                           ; turn off part cooling fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y-10} F3600       ; park toolhead near back
    STATUS_PART_READY
    FILTER_OFF
    

#####################################################################
#   PRINT PAUSE MACRO
#####################################################################
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  STATUS_BUSY
  _TOOLHEAD_PARK_PAUSE_CANCEL



#####################################################################
#   PRINT RESUME MACRO
#####################################################################
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}


  STATUS_PRINTING
  RESUME_BASE {get_params}


#####################################################################
#   PRINT CANCEL MACRO
#####################################################################
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  STATUS_READY
  TURN_OFF_HEATERS
  FILTER_OFF
  CANCEL_PRINT_BASE



#####################################################################
#   Helper: park toolhead used in PAUSE and CANCEL_PRINT
#####################################################################

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}



#####################################################################
#   TEMPERATURE CHECK
#####################################################################

[gcode_macro CHECK_HOTEND_TEMP]
description: Ensure hotend is at or above a safe working temperature
variable_min_temp: 220
gcode:
  {% set min_temp = params.MIN_TEMP|default(min_temp)|float %}
  {% if printer.extruder.temperature|float < min_temp %}
    STATUS_HEATING
    M109 S{min_temp}
    STATUS_READY
  {% endif %}

  
#####################################################################
#   LOAD FILAMENT
#####################################################################

[gcode_macro LOAD_FILAMENT]
gcode:

   STATUS_BUSY
   CHECK_HOTEND_TEMP
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
   STATUS_READY



#####################################################################
#   UNLOAD FILAMENT
#####################################################################

[gcode_macro UNLOAD_FILAMENT]
gcode:
   STATUS_BUSY
   CHECK_HOTEND_TEMP
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute
   STATUS_READY


#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[homing_override]
axes: xyz
set_position_z: 0
gcode:
   STATUS_HOMING
   G90
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}

  STATUS_READY



#####################################################################
#   HOME X
#####################################################################

[gcode_macro _HOME_X]
gcode:
    STATUS_HOMING
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

    STATUS_READY



#####################################################################
#   HOME Y
#####################################################################

[gcode_macro _HOME_Y]
gcode:
    STATUS_HOMING
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

    STATUS_READY

#####################################################################
#   HOME Z
#####################################################################


[gcode_macro _HOME_Z]
gcode:
    STATUS_HOMING
    G90
    G28 Z
    G1 Z30
    STATUS_READY

#####################################################################
#   DANCE
#####################################################################

[gcode_macro DANCE]
gcode:
    {% set homed = printer.toolhead.homed_axes %}
    {% if 'x' not in homed or 'y' not in homed or 'z' not in homed %}
      G28
    {% endif %}

    G90
    G1 Z50 F9000
    G1 X60 Y60 F12000

    # Big X
    G1 X110 Y110 F12000
    G1 X10 Y10
    G1 X10 Y110
    G1 X110 Y10
    G1 X60 Y60

    # Small X inside
    G1 X90 Y90
    G1 X30 Y30
    G1 X30 Y90
    G1 X90 Y30
    G1 X60 Y60

    # Tilted Diamond
    G1 X60 Y110
    G1 X110 Y60
    G1 X60 Y10
    G1 X10 Y60
    G1 X60 Y110
    G1 X60 Y60

    # Quick jabs
    G1 X100 Y100
    G1 X20 Y20
    G1 X100 Y20
    G1 X20 Y100
    G1 X60 Y60

    STATUS_READY

#####################################################################
#   SETTLE BELT TENSION
#####################################################################

[gcode_macro SETTLE_BELT_TENSION]
gcode:
    STATUS_BUSY
    _SETTLE_BELT_TENSION
    STATUS_READY

#####################################################################
#  Reload Gcode Macros
#####################################################################

[gcode_macro RELOAD_MACROS]
gcode:
    RELOAD_GCODE_MACROS

#####################################################################
#  CHOME
#####################################################################

[gcode_macro CHOME]
description: Homes XYZ axis only if printer is in a non-homed state
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    M106 S255
    G28
  {% endif %}


#####################################################################
#  M600
#####################################################################

[gcode_macro M600]
gcode:
    STATUS_PAUSED
    PAUSE